name: Add PR Template Comment
on:
  issues:
    types: [opened]

jobs:
  add-comment:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Extract form data
        id: form
        run: |
          # Extract the issue body
          echo "Raw issue body:"
          echo "${{ github.event.issue.body }}"

          # Parse the inputs from the form with defaults if extraction fails
          NAME=$(echo "${{ github.event.issue.body }}" | awk '/### Name/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Your submission name]")
          DESCRIPTION=$(echo "${{ github.event.issue.body }}" | awk '/### Description/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Your description]")
          LINK=$(echo "${{ github.event.issue.body }}" | awk '/### Link/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Your link]")
          LAYER=$(echo "${{ github.event.issue.body }}" | awk '/### Layer/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Selected layer]")
          COMPONENTS=$(echo "${{ github.event.issue.body }}" | awk '/### Components/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Component categories]")
          LICENSE=$(echo "${{ github.event.issue.body }}" | awk '/### License/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Selected license type]")
          TYPE=$(echo "${{ github.event.issue.body }}" | awk '/### Type/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Selected type]")
          USAGE=$(echo "${{ github.event.issue.body }}" | awk '/### Usage/{getline; while(getline && $0 !~ /^###/){if($0 !~ /^[[:space:]]*$/){print $0; exit}}}' || echo "[Usage description]")

          # If extracted values are empty, use defaults
          [ -z "$NAME" ] && NAME="[Your submission name]"
          [ -z "$DESCRIPTION" ] && DESCRIPTION="[Your description]"
          [ -z "$LINK" ] && LINK="[Your link]"
          [ -z "$LAYER" ] && LAYER="[Selected layer]"
          [ -z "$COMPONENTS" ] && COMPONENTS="[Component categories]"
          [ -z "$LICENSE" ] && LICENSE="[Selected license type]"
          [ -z "$TYPE" ] && TYPE="[Selected type]"
          [ -z "$USAGE" ] && USAGE="[Usage description]"

          # Debug output
          echo "Extracted NAME: $NAME"
          echo "Extracted DESCRIPTION: $DESCRIPTION"
          echo "Extracted LINK: $LINK"
          echo "Extracted LAYER: $LAYER"
          echo "Extracted COMPONENTS: $COMPONENTS"
          echo "Extracted LICENSE: $LICENSE"
          echo "Extracted TYPE: $TYPE"
          echo "Extracted USAGE: $USAGE"

          # Output extracted values using GITHUB_OUTPUT
          {
            echo "name=$NAME"
            echo "description=$DESCRIPTION"
            echo "link=$LINK"
            echo "layer=$LAYER"
            echo "components=$COMPONENTS"
            echo "license=$LICENSE"
            echo "type=$TYPE"
            echo "usage=$USAGE"
          } >> $GITHUB_OUTPUT

      - name: Add Tech Stack PR Template Comment
        if: contains(github.event.issue.labels.*.name, 'tech-stack')
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for submitting a new tech stack item! Here's a template for the PR that you or anyone else can submit to add this to `techStackData.ts`:

            ```typescript
            {
              Name: '${{ steps.form.outputs.name }}',
              Description: '${{ steps.form.outputs.description }}',
              Link: '${{ steps.form.outputs.link }}',
              Layer: '${{ steps.form.outputs.layer }}',
              Components: '${{ steps.form.outputs.components }}',
              License: '${{ steps.form.outputs.license }}',
            },
            ```

            To submit:
            1. Fork the repository
            2. Add your entry to the end of the array in `src/data/techStackData.ts`
            3. Create a pull request

            Make sure to:
            - Match the exact format of existing entries
            - Include a comment in your PR linking back to this issue

      - name: Add Model PR Template Comment
        if: contains(github.event.issue.labels.*.name, 'model')
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for submitting a new model! Here's a template for the PR that you or anyone else can submit to add this to `modelsData.ts`:

            ```typescript
            {
              Name: "${{ steps.form.outputs.name }}",
              Description: "${{ steps.form.outputs.description }}",
              Link: "${{ steps.form.outputs.link }}",
              Type: "${{ steps.form.outputs.type }}",
              Usage: "${{ steps.form.outputs.usage }}",
              License: "${{ steps.form.outputs.license }}"
            }
            ```

            To submit:
            1. Fork the repository
            2. Add your entry to the end of the array in `src/data/modelsData.ts`
            3. Create a pull request

            Make sure to:
            - Match the exact format of existing entries
            - Include a comment in your PR linking back to this issue
